quarkus.application.name=cosmos-acc-service
quarkus.http.port=8083

# Configuraton Swagger UI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/cosmos-acc-swagger
quarkus.swagger-ui.theme=original
quarkus.swagger-ui.urls.default=/cosmos-acc-openapi
quarkus.smallrye-openapi.path=/cosmos-acc-openapi

quarkus.http.auth.permission.public.paths=/cosmos-acc-swagger/*,/cosmos-acc-openapi/*
quarkus.http.auth.permission.public.policy=permit

# Remote microservice URL (PIM Service)
cosmos-pim-service/mp-rest/url=${PIM_SERVICE_URL}
cosmos-pim-service/mp-rest/scope=jakarta.inject.Singleton

# Remote microservice URL (IAM Service)
cosmos-iam-service/mp-rest/url=${IAM_SERVICE_URL:http://192.168.1.7:32037/API}
cosmos-iam-service/mp-rest/scope=jakarta.inject.Singleton

# === Keycloak Server Configuration ===
cosmos.keycloak.authServerUrl=${COSMOS_KEYCLOAK_AUTH_SERVER_URL:http://192.168.1.7:32037}
cosmos.keycloak.adminRealm=${COSMOS_KEYCLOAK_ADMIN_REALM:cosmos}
cosmos.keycloak.realm=${COSMOS_KEYCLOAK_REALM:cosmos}
cosmos.keycloak.adminClientId=${COSMOS_KEYCLOAK_ADMIN_CLIENT_ID:acc-service}
cosmos.keycloak.adminClientSecret=${COSMOS_KEYCLOAK_ADMIN_CLIENT_SECRET:4Hp7h46eFCkqPFbXRCcILFanIX1ISn0k}

# === Quarkus OIDC Client Configuration ===
quarkus.oidc.auth-server-url=${cosmos.keycloak.authServerUrl}/realms/${cosmos.keycloak.realm}
quarkus.oidc.client-id=${cosmos.keycloak.adminClientId}
quarkus.oidc.credentials.secret=${cosmos.keycloak.adminClientSecret}

# ======= =========================
quarkus.oidc.application-type=service
quarkus.oidc.token.audience-check=true

#================#
quarkus.oidc.authentication.mechanism=bearer
quarkus.oidc.token.principal-claim=sub
quarkus.oidc.token.issuer=${cosmos.keycloak.authServerUrl}/realms/${cosmos.keycloak.realm}
quarkus.oidc.token.audience=acc-service

#=== Security Configuration ===
quarkus.security.users.embedded.enabled=false
#=== all requests must be authenticated ==
quarkus.http.auth.permission.authenticated.paths=/*
#=== Only authenticated users can access ==
quarkus.http.auth.permission.authenticated.policy=authenticated
# Logs
quarkus.log.category."io.quarkus.oidc".level=DEBUG
quarkus.log.category."io.quarkus.security".level=DEBUG
quarkus.log.category."io.quarkus.vertx.http.runtime.security".level=DEBUG
quarkus.oidc.authentication.scopes=openid
quarkus.log.category."io.quarkus.security.runtime".level=DEBUG
quarkus.log.category."io.quarkus.arc.processor.BeanArchives".level=DEBUG
quarkus.log.category."org.eclipse.microprofile.jwt".level=DEBUG
quarkus.log.category."io.vertx.ext.auth".level=DEBUG
# BDD Configuration
quarkus.datasource.db-kind=${DB_KIND:postgresql}
quarkus.datasource.username=${DB_USERNAME:postgres}
quarkus.datasource.password=${DB_PASSWORD:cosmos@@2025}
quarkus.datasource.jdbc.url=jdbc:${DB_KIND:postgresql}://${ACC_DB_HOST}:${DB_PORT:5432}/${DB_NAME:cosmos_acc_db}
# ORM Configuration
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.default-schema=cosmos_acc

# SQL script Génération
##quarkus.hibernate-orm.scripts.generation=create
##quarkus.hibernate-orm.scripts.generation.create-target=create.sql
quarkus.hibernate-orm.reactive=false

quarkus.http.cors.origins=*
quarkus.http.cors=true
quarkus.http.cors.methods=GET,PATCH,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type